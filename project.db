CREATE TABLE Customer (
  CID INTEGER  NOT NULL  ,
  Surname VARCHAR(25)    ,
  Name VARCHAR(25)    ,
  Father_Name VARCHAR(25)    ,
  City VARCHAR(50)    ,
  Address VARCHAR(50)    ,
  Address_No INTEGER    ,
  Postal_Code INTEGER(5)    ,
  Email VARCHAR(50)      ,
PRIMARY KEY(CID));



CREATE TABLE Publisher (
  PID INTEGER  NOT NULL  ,
  Name VARCHAR(25)  NOT NULL  ,
  URL VARCHAR(50)    ,
  City VARCHAR(50)  NOT NULL  ,
  Address VARCHAR(50)  NOT NULL  ,
  Address_No INTEGER    ,
  Postal_Code INTEGER(5)  NOT NULL    ,
PRIMARY KEY(PID));



CREATE TABLE Storage (
  SID INTEGER  NOT NULL  ,
  City VARCHAR(50)  NOT NULL  ,
  Address VARCHAR(50)  NOT NULL  ,
  Address_No INTEGER    ,
  Postal_Code INTEGER(5)  NOT NULL  ,
  Phone INTEGER(10)  NOT NULL    ,
PRIMARY KEY(SID));



CREATE TABLE Author (
  AID INTEGER  NOT NULL  ,
  Surname VARCHAR(25)  NOT NULL  ,
  Name VARCHAR(25)  NOT NULL  ,
  Email VARCHAR(25)  NOT NULL    ,
PRIMARY KEY(AID));



CREATE TABLE P_Phone (
  Phone INTEGER(10)  NOT NULL  ,
  PID INTEGER  NOT NULL    ,
PRIMARY KEY(Phone, PID)  ,
  FOREIGN KEY(PID)
    REFERENCES Publisher(PID)
      ON DELETE CASCADE
      ON UPDATE CASCADE);


CREATE INDEX P_Phone_FKIndex1 ON P_Phone (PID);



CREATE TABLE C_Phone (
  CID INTEGER  NOT NULL  ,
  Phone INTEGER  NOT NULL    ,
PRIMARY KEY(CID, Phone)  ,
  FOREIGN KEY(CID)
    REFERENCES Customer(CID)
      ON DELETE CASCADE
      ON UPDATE CASCADE);


CREATE INDEX C_Phone_FKIndex1 ON C_Phone (CID);



CREATE TABLE Shopping_Cart (
  SCID INTEGER  NOT NULL  ,
  CID INTEGER  NOT NULL  ,
  Date DATETIME  NOT NULL    ,
PRIMARY KEY(SCID)  ,
  FOREIGN KEY(CID)
    REFERENCES Customer(CID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);


CREATE INDEX Shopping_Cart_FKIndex1 ON Shopping_Cart (CID);



CREATE TABLE Book (
  BID INTEGER  NOT NULL  ,
  Title VARCHAR(50)  NOT NULL  ,
  ISBN VARCHAR(17)  NOT NULL  ,
  Price FLOAT  NOT NULL DEFAULT 0.0 ,
  Quantity INTEGER  NOT NULL DEFAULT 0 ,
  PID INTEGER  NOT NULL  ,
  SID INTEGER  NOT NULL    ,
PRIMARY KEY(BID)    ,
  FOREIGN KEY(SID)
    REFERENCES Storage(SID)
      ON DELETE CASCADE
      ON UPDATE CASCADE,
  FOREIGN KEY(PID)
    REFERENCES Publisher(PID)
      ON DELETE NO ACTION
      ON UPDATE CASCADE);


CREATE INDEX Book_FKIndex1 ON Book (SID);
CREATE INDEX Book_FKIndex2 ON Book (PID);



CREATE TABLE AUTHORED_BY (
  BID INTEGER  NOT NULL  ,
  AID INTEGER  NOT NULL    ,
PRIMARY KEY(BID, AID)    ,
  FOREIGN KEY(BID)
    REFERENCES Book(BID)
      ON DELETE CASCADE
      ON UPDATE CASCADE,
  FOREIGN KEY(AID)
    REFERENCES Author(AID)
      ON DELETE SET NULL
      ON UPDATE CASCADE);


CREATE INDEX Book_has_Author_FKIndex1 ON AUTHORED_BY (BID);
CREATE INDEX Book_has_Author_FKIndex2 ON AUTHORED_BY (AID);



CREATE TABLE CONTAINED_IN (
  BID INTEGER  NOT NULL  ,
  SCID INTEGER  NOT NULL  ,
  Quantity INTEGER DEFAULT 1    ,
  Discount FLOAT   DEFAULT 0   ,
PRIMARY KEY(BID, SCID)    ,
  FOREIGN KEY(BID)
    REFERENCES Book(BID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(SCID)
    REFERENCES Shopping_Cart(SCID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);


CREATE INDEX Book_has_Shopping_Cart_FKIndex1 ON CONTAINED_IN (BID);
CREATE INDEX Book_has_Shopping_Cart_FKIndex2 ON CONTAINED_IN (SCID);


SELECT Book.Title
FROM Book,Publisher
WHERE Book.PID = Publisher.PID AND Publisher.Name="IEEE"
ORDER BY Book.Title;

SELECT DISTINCT Publisher.Name
FROM Book,Publisher
WHERE Book.PID = Publisher.PID AND Book.Title LIKE "Προγραμματισμός%";

SELECT *
FROM Book,Author,AUTHORED_BY
WHERE Book.BID = AUTHORED_BY.BID AND Author.AID = AUTHORED_BY.AID AND Author.Name = "Paulo" AND Author.Surname = "Coelho";

SELECT Storage.SID, COUNT(Book.Quantity) AS Quantity
FROM Book,Storage
WHERE Book.SID = Storage.SID
GROUP BY Storage.SID;

